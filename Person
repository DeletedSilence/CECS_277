//import java.util.Scanner;
public class Person {
	/**
	 * Person class attributes
	 */
	private String name;
	private String address;
	private double weight;
	private String height;
	private String eyeColor;
	private String gender;
	private String dateofbirth;
	private int age;
	
	
	/**
	 * default constructor for the person class
	 */
	public Person(){
		name = "Default Name";
		address = "xxxx";
		weight = 0.0;
		height = "x'x";
		eyeColor = "xxxx";
		gender = "X";
		dateofbirth = "xx/xx/xxxx";
		age = 0;
		
	}
	
	/**
	 * 
	 Overloaded constructor for teacher class
	 * @param n  pass by value the name
	 * @param add  pass by value the address
	 * @param w  pass by value the weight
	 * @param h  pass by value the height
	 * @param color  pass by value the eye color
	 * @param gen  pass by value the gender
	 * @param date pass by value the date
	 * @param old  pass by value the age
	 */
	public Person(String n, String add, double w,String h,String color,String gen, String date, int old){
		name = n;
		address = add;
		weight = w;
		height = h;
		eyeColor = color;
		gender = gen;
		dateofbirth = date;
		age = old;
	}
	
	//getters and setters
	public String getName(){
		return name;
	}
	
	public String getAddress(){
		return address;
	}
	
	public double getWeight(){
		return weight;
	}
	
	public String getHeight(){
		return height;
	}
	
	public String getEye(){
		return eyeColor;
	}
	
	public String getGender(){
		return gender;
	}
	
	public String getDOB(){
		return dateofbirth;
	}
	
	public int getAge(){
		return age;
	}
	
	public void setName(String n){
		name = n;
	}
	
	public void setAddress(String a){
		address = a;
	}
	
	public void setWeight(double w){
		weight = w;
	}
	
	public void setHeight(String h){
		height = h;
	}
	
	public void setColor(String c){
		eyeColor = c;
	}
	
	public void setGender(String g){
		gender = g;
	}
	
	public void setDOB(String d){
		dateofbirth = d;
	}
	
	public void setAge(int a){
		age= a;
	}
	
	/**
	 * toString method to display contents of object
	 * returns string
	 */
	public String toString(){
		return "Name: "+name+"\n"+"Address: "+address+"\n"+"Weight: "+weight+"\n"+"Height: "+height+"\n"+"EyeColor: "+eyeColor+"\n"+"Gender: "+gender+"\n"+"Date of Birth: "+dateofbirth+"\n"+"Age: "+age+"\n";
	}
	

}

import java.util.Random;
public class Student extends USCitizen{
	/**
	 * Student class attributes
	 */
	private int ID;
	private int NumCourses;
	private String [] courses;
	private int [] grade;
	private double GPA;
	
	/**
	 * Default constructor for the Student class that calls the default constructor for the super class
	 */
	public Student(){
		super();//Default constructor from super class
		Random rn = new Random();
		ID = rn.nextInt(19999999-10000000+1)+10000000;//Random ID
		NumCourses = 4;
		courses = new String[NumCourses];
		courses[0] = "English";
		courses[1] = "History";
		courses[2] = "Algebra";
		courses[3] = "Art";
		grade = new int[NumCourses];
		grade[0]= 4;
		grade[1] = 3;
		grade[2]=2;
		grade[1] = 1;
		GPA = ((double)10)/4;
	}
	
	/**
	 * 
	 * Overloaded constructor for teacher class
	 * @param n  pass by value the name
	 * @param add  pass by value the address
	 * @param w  pass by value the weight
	 * @param h  pass by value the height
	 * @param color  pass by value the eye color
	 * @param gen  pass by value the gender
	 * @param date pass by value the date
	 * @param old  pass by value the age
	 * @param citizen  pass by value the whether the user is a citizen
	 * @param visa pass by value the visa
	 * @param num pass by value the number of courses
	 */
	public Student(String n, String add, double w,String h,String color,String gen, String date, int old,boolean citizen, String visa, int num){
		super(n, add,w,h,color,gen,date,old,citizen,visa);
		//ID = id;
		Random rn = new Random();
		ID = rn.nextInt(19999999-10000000+1)+10000000;//random id
		NumCourses = num;
		courses = new String[NumCourses];//Instantiate the string array
		setCourses(NumCourses);//set the courses
		grade = new int[NumCourses];//instantiate the int array of grades
		setGrades(NumCourses);//set the grades
	}
	
	//setters and getters
	public int getID(){
		return ID;
	}
	
	public int getNumCourses(){
		return NumCourses;
	}
	
	public String getCourses(){
		String clas = "";
		for(int i = 0;i<NumCourses;i++){
			clas+=courses[i]+", ";
		}
		return clas;
	}
	
	public double getGPA(){
		int total=0;
		for(int i = 0; i<NumCourses;i++){
			total+=grade[i];
		}
		GPA = ((double)total)/NumCourses;
		return GPA;
	}
	
	public void setGPA(){
		int total=0;
		for(int i = 0; i<NumCourses;i++){
			total+=grade[i];
		}
		GPA = ((double)total)/NumCourses;
	}
	
	public void setNumCourse(int n){
		NumCourses = n;
	}
	
	public String getGrades(){
		String clas = "";
		for(int i = 0;i<NumCourses;i++){
			clas+=grade[i]+", ";
		}
		return clas;
	}
	
	public void setCourses(int s){
		courses = new String[s];
		String [] clas = {"History","Art","Biology","Geometry","English","Physical Education","Physics","Anthropology","Computer Science","Computer Engineering"};
		for(int i=0;i<s;i++){
			courses[i]=clas[i];
		}
	}
	
	public void setGrades(int s){
		grade = new int[s];
		int [] num = {4,3,2,1,0};
		Random rn = new Random();
		for(int i = 0;i<s;i++){
			int n = rn.nextInt(5);
			grade[i]=num[n];
		}
		
	}
	
	/**
	 * Overrides the toString() in USCitizen class
	 * returns string
	 */
	@Override
	public String toString(){
		return super.toString() + "Student ID: "+ID+"\n"+"Number of Courses: "+NumCourses+"\n"+"Courses: "+getCourses()+"\n"+"Grades: "+getGrades()+"\n"+"GPA: "+GPA;
	}
	
	

}
import java.util.Random;
public class Teacher extends USCitizen{
	/**
	 * Teacher class attributes
	 */
	private int ID;
	private int NumCourses;
	private String [] courses;
	
	/**
	 * Default Constructor
	 * set variables to default values when new object is called
	 */
	public Teacher(){
		super(); //calls the default constructor from the super class
		//adds more default values to the default constructor
		Random rn = new Random();
		ID = rn.nextInt(29999999-20000000+1)+20000000;// Random ID every time an object is instantiated
		NumCourses = 1;
		courses = new String[NumCourses];
		courses[0] = "None";
		
	}
	
	/**
	 * Overloaded constructor for teacher class
	 * @param n  pass by value the name
	 * @param add  pass by value the address
	 * @param w  pass by value the weight
	 * @param h  pass by value the height
	 * @param color  pass by value the eye color
	 * @param gen  pass by value the gender
	 * @param date pass by value the date
	 * @param old  pass by value the age
	 * @param citizen  pass by value the whether the user is a citizen
	 * @param visa pass by value the visa
	 * @param num pass by value the number of courses
	 */
	public Teacher(String n, String add, double w,String h,String color,String gen, String date, int old,boolean citizen,String visa, int num){
		super(n, add,w,h,color,gen,date,old,citizen,visa);
		Random rn = new Random();
		ID = rn.nextInt(29999999-20000000+1)+20000000; //get a random ID
		NumCourses = num;
		courses = new String[NumCourses];
		setCourses(NumCourses);
	}
	
	//setters and getters
	public int getID(){
		return ID;
	}
	
	public int getNumCourses(){
		return NumCourses;
	}
	
	public String getCourses(){
		String clas = "";
		for(int i = 0;i<NumCourses;i++){
			clas+=courses[i]+", ";
		}
		return clas;
	}
	
	public void setNumCourse(int n){
		NumCourses = n;
	}
	
	public void setCourses(int n){
		courses = new String[n];
		String [] clas = {"History","Art","Biology","Geometry","English","Physical Education","Physics","Anthropology","Computer Science","Computer Engineering"};
		for(int i=0;i<n;i++){
			courses[i]=clas[i];
		}
	}
	
	/**
	 * Overrides the toString() in USCitizen class
	 * returns string
	 */
	@Override
	public String toString(){
		return super.toString() + "Teacher ID: "+ID+"\n"+"Number of Courses Instructing: "+NumCourses+"\n"+"Courses: "+getCourses()+"\n";
	}

}
//import java.util.Scanner;
import java.util.Random;
public class USCitizen extends Person{
	/**
	 * USCitizen class attributes
	 */
	private boolean SSN;
	private int social;
	private String visa;
	
	/**
	 * Default constructor for the USCitizen class
	 */
	public USCitizen(){
		super();
		SSN = false;
		social = 99999999;
		visa = "m1 visa";
	}
	
	/**
	 * 
	 * Overloaded constructor for teacher class
	 * @param n  pass by value the name
	 * @param add  pass by value the address
	 * @param w  pass by value the weight
	 * @param h  pass by value the height
	 * @param color  pass by value the eye color
	 * @param gen  pass by value the gender
	 * @param date pass by value the date
	 * @param old  pass by value the age
	 * @param citizen  pass by value the whether the user is a citizen
	 * @param visa pass by value the visa
	 */
	public USCitizen(String n, String add, double w,String h,String color,String gen, String date, int old,boolean citizen,String visa){
		super(n,add,w,h,color,gen,date,old);
		SSN = citizen;
		this.visa=visa;
		if(citizen){//if user is a citizen randomly generate a social security number
			Random rn = new Random();
			social = rn.nextInt(99999999-10000000+1)+10000000;
		}
		else{
			social=99999999;//if user is not a US citizen
		}
		
	}
	
	//getters and setters
	public boolean  getCitizen(){
		return SSN;
	}
	public int getSSN(){
		return social;
	}
	
	public String getVisa(){
		return visa;
	}
	
	public void setSSN(int s){
		social = s;
	}
	
	public void setCitizen(boolean n){
		SSN = n;
	}
	
	public void setVisa(String v){
		visa =v;
	}
	
	//Display whether the user is able to work in the US	
	public String DisplayWorkStatus(){
		if(SSN){//if user is a citizen
			return "Work Status: Able to work"+"\n";
		}
		else{
			if(visa.equalsIgnoreCase("f1")||visa.equalsIgnoreCase("f1 visa")){//if user has f1 visa
				return "Work Status: Able to work (less than 20 hours per week)"+"\n";
			}
			else if(visa.equalsIgnoreCase("m1")||visa.equalsIgnoreCase("m1 visa")){//if user has a m1 visa
				return "Work Status: Able to work (with permission from sponsor)"+"\n";
			}
			else{//anything else not able to work
				return "Work Status: Not able to work"+"\n";
			}
		}
	}
	
	/**
	 * Overrides the toString() in Person class
	 * returns string
	 */
	@Override
	public String toString(){
		return super.toString()+"Social Security Number: "+social+"\n"+"Visa: "+visa+"\n"+DisplayWorkStatus();
	}
	
	
	
	

}


